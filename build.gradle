buildscript {
    ext {
        springBootVersion = '2.1.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.sonarqube" version "2.8"
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

apply from: "sonar.gradle"

group = 'com.berry'
version = 'v20200921_0.0.2'
sourceCompatibility = 1.8

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenCentral()
}

ext {
    springCloudVersion = 'Greenwich.SR1'
}

dependencies {

    compile("ch.qos.logback:logback-core:1.1.3")
    compile("ch.qos.logback:logback-classic:1.1.3")
    compile("ch.qos.logback:logback-access:1.1.3")

    // sonar
    compile "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.14.2'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.9.9'

    compile group: 'com.auth0', name: 'java-jwt', version: '3.3.0'

    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.13'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.13'

    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.45'
    // https://mvnrepository.com/artifact/com.alibaba/druid
    compile group: 'com.alibaba', name: 'druid', version: '1.1.12'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'

    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-staticdocs', version: '2.6.1'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '23.0'

    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'

// mybatis-plus
    compile('com.baomidou:mybatis-plus-boot-starter:3.0.3')

    // spring cloud registry config
//    implementation 'org.springframework.cloud:spring-cloud-starter-consul-config'
//    implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix'
//    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.boot:spring-boot-starter-data-redis"
    compile('org.springframework.boot:spring-boot-starter-freemarker')
    compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }

    // micrometer
    compile('io.micrometer:micrometer-registry-prometheus')
    compile('io.micrometer:micrometer-core')



    runtime('mysql:mysql-connector-java')
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    compileOnly 'org.projectlombok:lombok:1.18.8'
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
